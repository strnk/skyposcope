#!/bin/bash

source `which mini2440_init` || exit 1


# Default parameters
FULL='n'
REBUILD='n'
COMMANDLINE=''

if [[ -e $BUILDROOT_DIR/.config ]]
then
    defaultSkel=$(grep "BR2_ROOTFS_SKELETON_DEFAULT" $BUILDROOT_DIR/.config | cut -d"=" -f 2)
    customSkel=$(grep "BR2_ROOTFS_SKELETON_CUSTOM_PATH" $BUILDROOT_DIR/.config | cut -d"=" -f 2 | sed "s/\"//g")
    
    if [[ $defaultSkel = "y" ]]
    then
        BR_SOURCE_SKEL=$BUILDROOT_DIR/fs/skeleton
    else
        BR_SOURCE_SKEL=$customSkel
    fi
    
    cd $BUILDROOT_DIR
    BR_SOURCE_SKEL=$(readlink -f $BR_SOURCE_SKEL)
else
    echo "Failed to retrieve buildroot configuration. Is it installed ?"
    exit 1
fi

if [[ -z $BR_SOURCE_SKEL || ! -d $BR_SOURCE_SKEL ]]
then
    echo "Could not find source skeleton $BR_SOURCE_SKEL, check you buildroot config"
    exit
fi

# Parameters parsing
while [ $# -gt 0 ]
do
    case $1 in
        --full)       FULL="y";;
        --rebuild)   REBUILD="y";;

        --*|-*) echo "Unrecognized option $1"; exit 1;;
        *)  echo "Ignoring extra data '$1'";;
    esac

    shift
done

if [[ "x$FULL" = "xy" ]]
then
    # Cleanup the rootfs first
    echo "Clearing target rootfs ..."
    rm -rf $BUILDROOT_DIR/output/target/*
    cp -r $BUILDROOT_DIR/fs/skeleton/* $BUILDROOT_DIR/output/target/
    echo "Clearing installation stamps ..."
    find $BUILDROOT_DIR/output -name ".stamp_target_installed" -delete
    
    if [[ "x$REBUILD" = "xy" ]]
    then
        echo "Clearing staging build stamps ..."
        find $BUILDROOT_DIR/output -name ".stamp_staging_installed" -delete
    fi
fi

cd $BUILDROOT_DIR
make

